{"version":3,"sources":["logo.svg","data/items.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","types","Object","freeze","ingredients","typeMap","pizza","inbakad_pizza","de_luxe_special","kebab","lasagne","sallad","mapType","type","ingredientMap","lok","farost","rakor","pitabrod","tunnbrod","starksas","kott","oxfile","vitlok","bearnaisesas","valnotter","mapIngredient","ingredient","keys","find","name","items","price","tomat","ost","champinjoner","skinka","paprika","tonfisk","mozzarella","ruccola","honung","oregano","gorgonzola","gurka","peperoni","ananas","citron","kyckling","oliver","ofType","filter","item","withIngredients","length","every","includes","MenuItem","onIngredientClick","className","map","replace","key","onClick","App","useState","filtered_ingredients","setState","addIngredient","concat","href","i","removeIngredient","index","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88c36195.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const types = Object.freeze({\n  \"pizza\": 1,\n  \"de_luxe_special\": 2,\n  \"inbakad_pizza\": 3,\n  \"kebab\": 4,\n  \"lasagne\": 5,\n  \"sallad\": 6,\n})\n\nexport const ingredients = Object.freeze({\n  \"tomat\": 1,\n  \"ost\": 2,\n  \"champinjoner\": 3,\n  \"skinka\": 4,\n  \"paprika\": 5,\n  \"tonfisk\": 6,\n  \"sallad\": 7,\n  \"gurka\": 8,\n  \"ananas\": 9,\n  \"lok\": 10,\n  \"citron\": 11,\n  \"kyckling\": 12,\n  \"oliver\": 13,\n  \"farost\": 14,\n  \"rakor\": 15,\n  \"pitabrod\": 16,\n  \"peperoni\": 17,\n  \"starksas\": 18,\n  \"kott\": 19,\n  \"tunnbrod\": 20,\n  \"oxfile\": 21,\n  \"vitlok\": 22,\n  \"bearnaisesas\": 23,\n  \"gorgonzola\": 24,\n  \"mozzarella\": 25,\n  \"valnotter\": 26,\n  \"ruccola\": 27,\n  \"honung\": 28,\n  \"oregano\": 29,\n})\n\nconst typeMap = {\n  [types.pizza]: \"Pizzor\",\n  [types.inbakad_pizza]: \"Inbakade pizzor\",\n  [types.de_luxe_special]: \"De Luxe Special\",\n  [types.kebab]: \"Kebab\",\n  [types.lasagne]: \"Lasagne\",\n  [types.sallad]: \"Sallad\",\n}\n\nexport function mapType(type) {\n  return typeMap[type] || \"\"\n}\n\nconst ingredientMap = {\n  [ingredients.lok]: \"lök\",\n  [ingredients.farost]: \"fårost\",\n  [ingredients.rakor]: \"räkor\",\n  [ingredients.pitabrod]: \"pitabröd\",\n  [ingredients.tunnbrod]: \"tunnbröd\",\n  [ingredients.starksas]: \"stark sås\",\n  [ingredients.kott]: \"kött\",\n  [ingredients.oxfile]: \"oxfilé\",\n  [ingredients.vitlok]: \"vitlök\",\n  [ingredients.bearnaisesas]: \"bearnaisesås\",\n  [ingredients.valnotter]: \"valnötter\",\n}\n\nexport function mapIngredient(ingredient) {\n  return ingredientMap[ingredient] || Object.keys(ingredients).find((name) => ingredients[name] === ingredient)\n}\n\nconst items = [\n\n  // Pizzor\n  { name: \"Margerita\", type: types.pizza, price: 70, ingredients: [ingredients.tomat, ingredients.ost] },\n  { name: \"Funghi\", type: types.pizza, price: 75, ingredients: [ingredients.tomat, ingredients.ost, ingredients.champinjoner] },\n  { name: \"Prosciuotto\", type: types.pizza, price: 75, ingredients: [ingredients.tomat, ingredients.ost, ingredients.skinka] },\n  { name: \"Vesuvio\", type: types.pizza, price: 80, ingredients: [ingredients.tomat, ingredients.ost, ingredients.skinka, ingredients.paprika] },\n  { name: \"Venezia\", type: types.pizza, price: 80, ingredients: [ingredients.tomat, ingredients.ost, ingredients.skinka, ingredients.tonfisk] },\n\n  { name: \"Chèvre & Päron\", type: types.de_luxe_special, price: 110, ingredients: [ingredients.tomat, ingredients.mozzarella, ingredients.valnotter, ingredients.ruccola, ingredients.honung, ingredients.oregano] },\n  \n  // Inbakade pizzor\n  { name: \"Calzone\", type: types.inbakad_pizza, price: 80, ingredients: [ingredients.tomat, ingredients.ost, ingredients.skinka] },\n  { name: \"Ciao-Ciao\", type: types.inbakad_pizza, price: 90, ingredients: [ingredients.tomat, ingredients.ost, ingredients.champinjoner, ingredients.lok, ingredients.oxfile, ingredients.vitlok] },\n  { name: \"Da Vinci\", type: types.inbakad_pizza, price: 90, ingredients: [ingredients.tomat, ingredients.ost, ingredients.oxfile, ingredients.bearnaisesas, ingredients.gorgonzola] },\n  \n  // Kebab\n  { name: \"Mexicana\", type: types.kebab, price: 85, ingredients: [ingredients.pitabrod, ingredients.kott, ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.lok, ingredients.peperoni, ingredients.starksas] },\n  { name: \"Kebabrulle\", type: types.kebab, price: 85, ingredients: [ingredients.tunnbrod, ingredients.kott, ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.lok, ingredients.peperoni, ingredients.starksas] },\n\n  // Lasagne\n  { name: \"Lasagne al Forno\", type: types.lasagne, price: 85 },\n  \n  // Sallad\n  { name: \"Amerikansk Sallad\", type: types.sallad, price: 85, ingredients: [ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.skinka, ingredients.ost, ingredients.ananas] },\n  { name: \"Tonfisksallad\", type: types.sallad, price: 85, ingredients: [ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.tonfisk, ingredients.lok, ingredients.citron] },\n  { name: \"Kycklingsallad\", type: types.sallad, price: 85, ingredients: [ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.kyckling, ingredients.lok, ingredients.paprika] },\n  { name: \"Grekisk Sallad\", type: types.sallad, price: 85, ingredients: [ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.lok, ingredients.oliver, ingredients.paprika, ingredients.farost] },\n  { name: \"Vegetarisk Sallad\", type: types.sallad, price: 85, ingredients: [ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.lok, ingredients.oliver, ingredients.champinjoner, ingredients.ananas] },\n  { name: \"Räksallad\", type: types.sallad, price: 85, ingredients: [ingredients.sallad, ingredients.tomat, ingredients.gurka, ingredients.rakor, ingredients.citron] },\n]\n\nexport function ofType(type) {\n  return items.filter((item) => item.type === type)\n}\n\nexport function withIngredients(items, ingredients) {\n  if (ingredients.length === 0) {\n    return items\n  }\n\n  return items.filter((item) => item.ingredients && ingredients.every((ingredient) => item.ingredients.includes(ingredient)))\n}\n\nexport default items","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { mapType, mapIngredient, types, ofType, withIngredients, ingredients } from \"./data/items\"\n\nfunction MenuItem({ item: { name, price, ingredients }, onIngredientClick }) {\n  return <div className=\"Item\">\n    <span className=\"Item__name\">{name}</span>\n    <span className=\"Item__ingredients\">\n      {ingredients && ingredients.map((ingredient) => {\n        const name = mapIngredient(ingredient)\n        const className = name.replace(\"å\", \"a\").replace(\"ä\", \"a\").replace(\"ö\", \"o\").replace(\" \", \"\")\n\n        return <span key={name} className={\"Item__ingredient \" + className} onClick={() => onIngredientClick(ingredient)}>{name}</span>\n      })}\n    </span>\n    <span className=\"Item__price\">{price} kr</span>\n  </div>\n}\n\nfunction App() {\n\n  const [{ filtered_ingredients }, setState] = useState({ filtered_ingredients: [] })\n\n  const addIngredient = (ingredient) => {\n    if (!filtered_ingredients.includes(ingredient)) {\n      setState({ filtered_ingredients: filtered_ingredients.concat(ingredient) })\n    }\n  }\n\n  const removeIngredient = (ingredient) => {\n    setState({ filtered_ingredients: filtered_ingredients.filter((i) => i !== ingredient) })\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Pizzeria 13</h1>\n        <div>Telefon: <a href=\"tel://031138747\">031-13 87 47</a></div>\n        <div>Chalmersgatan 13, 411 35 Göteborg</div>\n        <div>Måndag – Fredag 11.00 – 22.00</div>\n        <div>Lördag – Söndag 12.00 – 22.00</div>\n      </div>\n      {filtered_ingredients.length > 0 && (\n        <div className=\"filters\">\n          <h3>Ingrediensfilter</h3>\n          <div className=\"Item__ingredients\">\n            {filtered_ingredients.map((ingredient) => {\n              const name = mapIngredient(ingredient)\n              return <span key={name} className={\"Item__ingredient \" + name} onClick={() => removeIngredient(ingredient)}>&times; {name}</span>\n            })}\n          </div>\n        </div>\n      )}\n      <h2>{mapType(types.pizza)}</h2>\n      {withIngredients(ofType(types.pizza), filtered_ingredients).map((item, index) => <MenuItem key={index} item={item} onIngredientClick={addIngredient} />)}\n      <h2>{mapType(types.de_luxe_special)}</h2>\n      {withIngredients(ofType(types.de_luxe_special), filtered_ingredients).map((item, index) => <MenuItem key={index} item={item} onIngredientClick={addIngredient} />)}\n      <h2>{mapType(types.inbakad_pizza)}</h2>\n      {withIngredients(ofType(types.inbakad_pizza), filtered_ingredients).map((item, index) => <MenuItem key={index} item={item} onIngredientClick={addIngredient} />)}\n      <h2>{mapType(types.kebab)}</h2>\n      {withIngredients(ofType(types.kebab), filtered_ingredients).map((item, index) => <MenuItem key={index} item={item} onIngredientClick={addIngredient} />)}\n      <h2>{mapType(types.lasagne)}</h2>\n      {withIngredients(ofType(types.lasagne), filtered_ingredients).map((item, index) => <MenuItem key={index} item={item} onIngredientClick={addIngredient} />)}\n      <h2>{mapType(types.sallad)}</h2>\n      {withIngredients(ofType(types.sallad), filtered_ingredients).map((item, index) => <MenuItem key={index} item={item} onIngredientClick={addIngredient} />)}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}